{
  "env": {
    "es6": true,
    "node": true,
    "mocha": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2019,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "ignorePatterns": [
    ".eslintrc.js",
    "prettier.config.js"
  ],
  "rules": {
    "@typescript-eslint/type-annotation-spacing": "error",
    "no-unused-vars": "off", // note: you must disable the base rule as it can report incorrect errors
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "no-array-constructor": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "no-empty-function": "off", // note: you must disable the base rule as it can report incorrect errors
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "no-use-before-define": "off", // note: you must disable the base rule as it can report incorrect errors
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "no-var": "error",
    "@typescript-eslint/no-var-requires": "error", // overridden below
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "@typescript-eslint/explicit-function-return-type": "off", // overridden below
    "camelcase": "error"
  },
  "overrides": [
    {
      "files": [
        "*.js"
      ],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      // enable the rule specifically for TypeScript files
      "files": ["*.ts", "*.mts", "*.cts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": ["error"]
      }
    }
  ]
}
